// Generated by Pdef Objective-C generator.

#import <Foundation/Foundation.h>
#import "PDef.h"
@class TestException;
@class TestMessage;
@class TestMessage;


/** Test interface with method of all types.
Multi-line comment.
 */
@protocol TestInterface
/** Returns the sum of the numbers.
Multi-line comment.
 */
- (NSOperation *) methodArg0:(int32_t )arg0
        arg1:(int32_t )arg1
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the sum of the numbers. */
- (NSOperation *) queryArg0:(int32_t )arg0
        arg1:(int32_t )arg1
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the sum of the numbers. */
- (NSOperation *) postArg0:(int32_t )arg0
        arg1:(int32_t )arg1
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the same string. */
- (NSOperation *) string0Text:(NSString *)text
            callback:(void (^)(id result, NSError *error))callback;

/** Return the same datetime. */
- (NSOperation *) datetime0Dt:(NSDate *)dt
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the same message. */
- (NSOperation *) message0Msg:(TestMessage *)msg
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the total number of items. */
- (NSOperation *) collectionsList0:(NSArray *)list0
        set0:(NSSet *)set0
        map0:(NSDictionary *)map0
            callback:(void (^)(id result, NSError *error))callback;

/** Returns the same interface (yes, it's endless). */
- (id<TestInterface> ) interface0Arg0:(int32_t )arg0
        arg1:(int32_t )arg1
;

/** Void method which returns null. */
- (NSOperation *) void0Callback:(void (^)(id result, NSError *error))response;

/** Throws a TestException. */
- (NSOperation *) exc0Callback:(void (^)(id result, NSError *error))response;

/** Throws any server error. */
- (NSOperation *) serverErrorCallback:(void (^)(id result, NSError *error))response;

@end

@interface TestInterfaceClient : PDInterface <TestInterface>
@end
PDInterfaceDescriptor *TestInterfaceDescriptor();
