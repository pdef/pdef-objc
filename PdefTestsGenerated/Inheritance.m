// Generated by Pdef Objective-C generator.

#import "Inheritance.h"


@implementation Base
- (PDMessageDescriptor *)descriptor {
    return BaseDescriptor();
}
@end


@implementation Subtype
- (PDMessageDescriptor *)descriptor {
    return SubtypeDescriptor();
}
@end


@implementation Subtype2
- (PDMessageDescriptor *)descriptor {
    return Subtype2Descriptor();
}
@end


@implementation MultiLevelSubtype
- (PDMessageDescriptor *)descriptor {
    return MultiLevelSubtypeDescriptor();
}
@end


// Descriptors
static dispatch_once_t _PolymorphicTypeOnce;
static PDEnumDescriptor *_PolymorphicTypeDescriptor;
PDEnumDescriptor *PolymorphicTypeDescriptor() {
    dispatch_once(&_PolymorphicTypeOnce, ^() {
        _PolymorphicTypeDescriptor = [[PDEnumDescriptor alloc] initWithNumbersToNames:@{
                @(1): @"SUBTYPE",
                @(2): @"SUBTYPE2",
                @(3): @"MULTILEVEL_SUBTYPE",
        }];
    });
    return _PolymorphicTypeDescriptor;
}


static dispatch_once_t _BaseOnce;
static PDMessageDescriptor *_BaseDescriptor;
PDMessageDescriptor *BaseDescriptor() {
    dispatch_once(&_BaseOnce, ^() {
        _BaseDescriptor = [[PDMessageDescriptor alloc]
                initWithClass:[Base class]
                         base:nil
           discriminatorValue:0
             subtypeSuppliers:@[
                               ^PDMessageDescriptor *() { return SubtypeDescriptor(); },
                               ^PDMessageDescriptor *() { return Subtype2Descriptor(); },
                               ^PDMessageDescriptor *() { return MultiLevelSubtypeDescriptor(); },
                              ]
                       fields:@[
                               [[PDFieldDescriptor alloc] initWithName:@"type"
                                       typeSupplier:^PDDataTypeDescriptor *() { return PolymorphicTypeDescriptor(); }
                                    isDiscriminator:YES],
                               [[PDFieldDescriptor alloc] initWithName:@"field"
                                       typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; }
                                    isDiscriminator:NO],
                               ]];
    });
    return _BaseDescriptor;
}


static dispatch_once_t _SubtypeOnce;
static PDMessageDescriptor *_SubtypeDescriptor;
PDMessageDescriptor *SubtypeDescriptor() {
    dispatch_once(&_SubtypeOnce, ^() {
        _SubtypeDescriptor = [[PDMessageDescriptor alloc]
                initWithClass:[Subtype class]
                         base:BaseDescriptor()
           discriminatorValue:PolymorphicType_SUBTYPE 
             subtypeSuppliers:@[
                               ^PDMessageDescriptor *() { return MultiLevelSubtypeDescriptor(); },
                              ]
                       fields:@[
                               [[PDFieldDescriptor alloc] initWithName:@"subfield"
                                       typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; }
                                    isDiscriminator:NO],
                               ]];
    });
    return _SubtypeDescriptor;
}


static dispatch_once_t _Subtype2Once;
static PDMessageDescriptor *_Subtype2Descriptor;
PDMessageDescriptor *Subtype2Descriptor() {
    dispatch_once(&_Subtype2Once, ^() {
        _Subtype2Descriptor = [[PDMessageDescriptor alloc]
                initWithClass:[Subtype2 class]
                         base:BaseDescriptor()
           discriminatorValue:PolymorphicType_SUBTYPE2 
             subtypeSuppliers:@[]
                       fields:@[
                               [[PDFieldDescriptor alloc] initWithName:@"subfield2"
                                       typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; }
                                    isDiscriminator:NO],
                               ]];
    });
    return _Subtype2Descriptor;
}


static dispatch_once_t _MultiLevelSubtypeOnce;
static PDMessageDescriptor *_MultiLevelSubtypeDescriptor;
PDMessageDescriptor *MultiLevelSubtypeDescriptor() {
    dispatch_once(&_MultiLevelSubtypeOnce, ^() {
        _MultiLevelSubtypeDescriptor = [[PDMessageDescriptor alloc]
                initWithClass:[MultiLevelSubtype class]
                         base:SubtypeDescriptor()
           discriminatorValue:PolymorphicType_MULTILEVEL_SUBTYPE 
             subtypeSuppliers:@[]
                       fields:@[
                               [[PDFieldDescriptor alloc] initWithName:@"mfield"
                                       typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; }
                                    isDiscriminator:NO],
                               ]];
    });
    return _MultiLevelSubtypeDescriptor;
}


