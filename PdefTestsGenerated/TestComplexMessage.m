// Generated by Pdef Objective-C generator.

#import "TestComplexMessage.h"
#import "TestMessage.h"
#import "TestMessage.h"
#import "Base.h"


@implementation TestComplexMessage
static PDMessageDescriptor *_TestComplexMessageDescriptor;

+ (PDMessageDescriptor *)typeDescriptor {
    return _TestComplexMessageDescriptor;
}

- (PDMessageDescriptor *)descriptor {
    return [TestComplexMessage typeDescriptor];
}

- (id)copyWithZone:(NSZone *)zone {
    TestComplexMessage *copy = [[[self class] allocWithZone:zone] init];

    if (copy != nil) {
        copy.short0 = _short0;
        copy.long0 = _long0;
        copy.float0 = _float0;
        copy.double0 = _double0;
        copy.datetime0 = _datetime0;
        copy.list0 = (_list0) ? [_list0 copy] : nil;
        copy.set0 = (_set0) ? [_set0 copy] : nil;
        copy.map0 = (_map0) ? [_map0 copy] : nil;
        copy.enum0 = _enum0;
        copy.message0 = (_message0) ? [_message0 copy] : nil;
        copy.polymorphic = (_polymorphic) ? [_polymorphic copy] : nil;
        copy.datatypes = (_datatypes) ? [_datatypes copy] : nil;
    }

    return copy;
}

+ (void)initialize {
    if (self != [TestComplexMessage class]) {
        return;
    }

    _TestComplexMessageDescriptor = [[PDMessageDescriptor alloc]
            initWithClass:[TestComplexMessage class]
                     base:[TestMessage typeDescriptor]
       discriminatorValue:0
         subtypeSuppliers:@[]
                   fields:@[
    [[PDFieldDescriptor alloc] initWithName:@"short0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors int16]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"long0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors int64]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"float0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors float0]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"double0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors double0]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"datetime0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors datetime]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"list0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors listWithElement:[PDDescriptors int32]]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"set0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors setWithElement:[PDDescriptors int32]]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"map0" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors mapWithKey:[PDDescriptors int32] value:[PDDescriptors float0]]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"enum0" typeSupplier:^PDDataTypeDescriptor *() { return TestEnumDescriptor(); } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"message0" typeSupplier:^PDDataTypeDescriptor *() { return [TestMessage typeDescriptor]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"polymorphic" typeSupplier:^PDDataTypeDescriptor *() { return [Base typeDescriptor]; } discriminator:NO],
    [[PDFieldDescriptor alloc] initWithName:@"datatypes" typeSupplier:^PDDataTypeDescriptor *() { return [TestComplexMessage typeDescriptor]; } discriminator:NO],
                           ]];
}
@end


