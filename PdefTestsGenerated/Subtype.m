// Generated by Pdef Objective-C generator.

#import "Subtype.h"
#import "Base.h"
#import "MultiLevelSubtype.h"


@implementation Subtype
static PDMessageDescriptor *_SubtypeDescriptor;

+ (PDMessageDescriptor *)typeDescriptor {
    return _SubtypeDescriptor;
}

- (PDMessageDescriptor *)descriptor {
    return [Subtype typeDescriptor];
}

- (id) init {
    if (self = [super init]) {
        self.type = PolymorphicType_SUBTYPE ;
    }
    return self;
}

- (BOOL)isEqualToMessage:(PDMessage *)message {
    if (self == message)
        return YES;
    if (message == nil)
        return NO;
    if (![[message class] isEqual:[self class]])
        return NO;
    if (![super isEqualToMessage:message])
        return NO;

    Subtype *cast = (Subtype *)message;
    if (self.subfield != cast.subfield && ![self.subfield isEqual:cast.subfield])
        return NO;
    return YES;
}

- (NSUInteger)hash {
    NSUInteger hash = [super hash];
    hash = hash * 31u + [self.subfield hash];
    return hash;
}

- (id)copyWithZone:(NSZone *)zone {
    Subtype *copy = (Subtype *)[super copyWithZone:zone];

    if (copy != nil) {
        copy.subfield = _subfield;
    }

    return copy;
}

+ (void)initialize {
    if (self != [Subtype class]) {
        return;
    }

    _SubtypeDescriptor = [[PDMessageDescriptor alloc]
            initWithClass:[Subtype class]
                     base:[Base typeDescriptor]
       discriminatorValue:PolymorphicType_SUBTYPE 
         subtypeSuppliers:@[
                           ^PDMessageDescriptor *() { return [MultiLevelSubtype typeDescriptor]; },
                          ]
                   fields:@[
    [[PDFieldDescriptor alloc] initWithName:@"subfield" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; } discriminator:NO],
                           ]];
}
@end


