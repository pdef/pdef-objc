// Generated by Pdef Objective-C generator.

#import "Base.h"
#import "Subtype.h"
#import "Subtype2.h"
#import "MultiLevelSubtype.h"


@implementation Base
static PDMessageDescriptor *_BaseDescriptor;

+ (PDMessageDescriptor *)typeDescriptor {
    return _BaseDescriptor;
}

- (PDMessageDescriptor *)descriptor {
    return [Base typeDescriptor];
}

- (BOOL)isEqualToMessage:(PDMessage *)message {
    if (self == message)
        return YES;
    if (message == nil)
        return NO;
    if (![[message class] isEqual:[self class]])
        return NO;
    if (![super isEqualToMessage:message])
        return NO;

    Base *cast = (Base *)message;
    if (self.type != cast.type)
        return NO;
    if (self.field != cast.field && ![self.field isEqual:cast.field])
        return NO;
    return YES;
}

- (NSUInteger)hash {
    NSUInteger hash = [super hash];
    hash = hash * 31u + (NSUInteger) self.type;
    hash = hash * 31u + [self.field hash];
    return hash;
}

- (id)copyWithZone:(NSZone *)zone {
    Base *copy = (Base *)[super copyWithZone:zone];

    if (copy != nil) {
        copy.type = _type;
        copy.field = _field;
    }

    return copy;
}

+ (void)initialize {
    if (self != [Base class]) {
        return;
    }

    _BaseDescriptor = [[PDMessageDescriptor alloc]
            initWithClass:[Base class]
                     base:nil
       discriminatorValue:0
         subtypeSuppliers:@[
                           ^PDMessageDescriptor *() { return [Subtype typeDescriptor]; },
                           ^PDMessageDescriptor *() { return [Subtype2 typeDescriptor]; },
                           ^PDMessageDescriptor *() { return [MultiLevelSubtype typeDescriptor]; },
                          ]
                   fields:@[
    [[PDFieldDescriptor alloc] initWithName:@"type" typeSupplier:^PDDataTypeDescriptor *() { return PolymorphicTypeDescriptor(); } discriminator:YES],
    [[PDFieldDescriptor alloc] initWithName:@"field" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; } discriminator:NO],
                           ]];
}
@end


