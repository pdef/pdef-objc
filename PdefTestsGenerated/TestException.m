// Generated by Pdef Objective-C generator.

#import "TestException.h"


@implementation TestException
static PDMessageDescriptor *_TestExceptionDescriptor;

+ (PDMessageDescriptor *)typeDescriptor {
    return _TestExceptionDescriptor;
}

- (PDMessageDescriptor *)descriptor {
    return [TestException typeDescriptor];
}

- (BOOL)isEqualToMessage:(PDMessage *)message {
    if (self == message)
        return YES;
    if (message == nil)
        return NO;
    if (![[message class] isEqual:[self class]])
        return NO;
    if (![super isEqualToMessage:message])
        return NO;

    TestException *cast = (TestException *)message;
    if (self.text != cast.text && ![self.text isEqual:cast.text])
        return NO;
    return YES;
}

- (NSUInteger)hash {
    NSUInteger hash = [super hash];
    hash = hash * 31u + [self.text hash];
    return hash;
}

- (id)copyWithZone:(NSZone *)zone {
    TestException *copy = (TestException *)[super copyWithZone:zone];

    if (copy != nil) {
        copy.text = _text;
    }

    return copy;
}

+ (void)initialize {
    if (self != [TestException class]) {
        return;
    }

    _TestExceptionDescriptor = [[PDMessageDescriptor alloc]
            initWithClass:[TestException class]
                     base:nil
       discriminatorValue:0
         subtypeSuppliers:@[]
                   fields:@[
    [[PDFieldDescriptor alloc] initWithName:@"text" typeSupplier:^PDDataTypeDescriptor *() { return [PDDescriptors string]; } discriminator:NO],
                           ]];
}
@end


