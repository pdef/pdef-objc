// Generated by Pdef Objective-C generator.

#import "{{ definition.name }}.h"
{% for type0 in definition.referenced_types %}
    {% if type0.is_message or type0.is_interface %}
#import "{{ type0.name }}.h"
    {% endif %}
{% endfor %}


{% if definition.is_enum %}
// {{ definition.name }} enum descriptor
static dispatch_once_t _{{ definition.name }}Once;
static PDEnumDescriptor *_{{ definition.name }}Descriptor;
PDEnumDescriptor *{{ definition.name }}Descriptor() {
    dispatch_once(&_{{ definition.name }}Once, ^() {
        _{{ definition.name }}Descriptor = [[PDEnumDescriptor alloc] initWithNumbersToNames:@{
            {% for value in definition.values %}
                @({{ loop.index }}): @"{{ value.name }}",
            {% endfor %}
        }];
    });
    return _{{ definition.name }}Descriptor;
}


{% elif definition.is_message %}
@implementation {{ definition.name }}
static PDMessageDescriptor *_{{ definition.name }}Descriptor;

+ (PDMessageDescriptor *)typeDescriptor {
    return _{{ definition.name }}Descriptor;
}

- (PDMessageDescriptor *)descriptor {
    return [{{ definition.name }} typeDescriptor];
}

+ (void)initialize {
    if (self != [{{ definition.name }} class]) {
        return;
    }

    _{{ definition.name }}Descriptor = [[PDMessageDescriptor alloc]
            initWithClass:[{{ definition.name }} class]
                     base:{% if definition.base -%}
                              {{ definition.base|objc_descriptor }}
                          {% else -%}
                              nil
                          {% endif %}
       discriminatorValue:{% if definition.discriminator_value -%}
                              {{ definition.discriminator_value|objc_type }}
                          {% else -%}
                              0
                          {% endif %}
    {% if definition.subtypes %}
         subtypeSuppliers:@[
                {% for subtype in definition.subtypes %}
                           ^PDMessageDescriptor *() { return {{ subtype|objc_descriptor }}; },
                {% endfor %}
                          ]
    {% else %}
         subtypeSuppliers:@[]
    {% endif %}
                   fields:@[
                {% for field in definition.declared_fields %}
                           [[PDFieldDescriptor alloc] initWithName:@"{{ field.name }}"
                                   typeSupplier:^PDDataTypeDescriptor *() { return {{ field.type|objc_descriptor }}; }
                                isDiscriminator:{{ field.is_discriminator|objc_bool }}],
                {% endfor %}
                           ]];
}
@end

{% else %}
{% endif %}
