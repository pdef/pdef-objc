// Generated by Pdef Objective-C generator.

#import <Foundation/Foundation.h>
#import "PDef.h"
{# Import the base header if it is a message and it has a base #}
{% if definition.is_message and definition.base %}
#import "{{ definition.base.name }}.h"
{% endif %}
{# Import enum headers, forward reference other referenced types. #}
{%- for type0 in definition.referenced_types %}
    {% if type0.is_enum %}
#import "{{ type0.name }}.h"
    {% elif type0.is_definition and type0 != definition.base %}
@class {{ type0.name }};
    {% endif %}
{% endfor %}


{% if definition.doc %}
/** {{ definition.doc }} */
{% endif -%}


{% if definition.is_enum %}
typedef NS_ENUM(NSInteger, {{ definition.name }}) {
    {% for value in definition.values %}
    {{ definition.name }}_{{ value.name }},
    {% endfor %}
};

PDEnumDescriptor *{{ definition.name }}Descriptor();


{% elif definition.is_message %}
@interface {{ definition.name }} : {{ definition|objc_base }}
    {% for field in definition.declared_fields %}
@property (nonatomic) {{ field.type|objc_type }}{{ field.name }};
    {% endfor %}

+ (PDMessageDescriptor *)typeDescriptor;
@end


{% else %}
@protocol {{ definition.name }}
    {% for method in definition.declared_methods %}
{% if method.doc %}
/** {{ method.doc }} */
{% endif %}
    {% if not method.args %}
- (NSOperation *) {{ method.name }}Response:(void (^)(id result, NSError *error))response;
    {% else %}
        {% set first_arg = method.args[0] %}
        {% set remaining_args = method.args[1:] %}
- (NSOperation *) {{ method.name }}{{ first_arg.name|upper_first }}:({{ first_arg.type|objc_type }}){{ first_arg.name }}
    {% for arg in remaining_args %}
        {{ arg.name }}:({{ arg.type|objc_type }}){{ arg.name }}
    {% endfor %}
        response:(void (^)(id result, NSError *error))error;
    {% endif %}

    {% endfor %}
@end
{% endif %}
